<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="com.wenka.web.controller">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:resources.properties</value>
            </list>
        </property>
        <property name="fileEncoding"  value="utf-8" />
    </bean>

    <!-- JSON -->
    <util:constant id="serializerFeature"
                   static-field="com.alibaba.fastjson.serializer.SerializerFeature.DisableCircularReferenceDetect"/>

    <bean id="fastJsonHttpMessageConverter"
          class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="features" ref="serializerFeature"></property>
    </bean>

    <!-- 验证器 -->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
        <property name="validationMessageSource" ref="messageSource"></property>
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
                <value>classpath:messages</value>
                <value>classpath:org/hibernate/validator/ValidationMessages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>

    <!-- 转换器 -->
    <mvc:annotation-driven validator="validator">
        <!--conversion-service="conversionService" -->
        <mvc:message-converters>
            <ref bean="fastJsonHttpMessageConverter"/>
        </mvc:message-converters>
        <mvc:async-support default-timeout="300000"/>
    </mvc:annotation-driven>

    <!-- 枚举类型自动绑定 -->
    <bean id="conversionService"
          class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.wenka.commons.util.StringToEnumConverterFactory"/>
            </set>
        </property>
    </bean>

    <!-- 上传 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="21474836480"/>
    </bean>

    <mvc:interceptors>
        <bean class="com.wenka.commons.web.MHandlerInterceptor"/>
    </mvc:interceptors>

    <!-- json 化异常 -->
    <bean id="annotationMethodHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver" >
        <property name="order" value="0"/>
    </bean>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="defaultViews">
            <list>
                <bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView"/>
            </list>
        </property>
    </bean>

    <bean id="restExceptionResolver" class="com.wenka.commons.web.handler.RestExceptionHandler">
        <property name="order" value="100"/>
        <property name="messageConverters">
            <list>
                <ref bean="fastJsonHttpMessageConverter"/>
            </list>
        </property>
        <property name="errorResolver">
            <bean class="com.wenka.commons.web.handler.DefaultRestErrorResolver">
                <property name="defaultMoreInfoUrl" value="mailto:wkwenka@gmail.com"/>
                <property name="exceptionMappingDefinitions">
                    <map>
                        <entry key="com.moyuer.bsf.common.web.exception"
                               value="401, error.Unauthorized"/>
                        <entry key="org.springframework.orm.hibernate5.HibernateOptimisticLockingFailureException"
                               value="500, error.HibernateOptimisticLockingFailureException"/>
                        <entry key="org.springframework.dao.DataIntegrityViolationException"
                               value="500, error.ConstraintViolationException"/>

                        <entry key="Throwable" value="500"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>
</beans>
